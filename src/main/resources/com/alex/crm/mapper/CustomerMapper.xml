<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alex.crm.mapper.CustomerMapper">
  <resultMap id="BaseResultMap" type="Customer">
    <id column="id" property="id" />
    <result column="name" property="name" />
    <result column="age" property="age" />
    <result column="gender" property="gender" />
    <result column="tel" property="tel" />
    <result column="qq" property="qq" />
    <result column="input_time" property="inputTime" />
    <result column="status" property="status" />
    <association property="job" columnPrefix="j_" javaType="SystemDictionaryItem">
      <id column="id" property="id" />
      <result column="title" property="title" />
    </association>
    <association property="source" columnPrefix="s_" javaType="SystemDictionaryItem">
      <id column="id" property="id" />
      <result column="title" property="title" />
    </association>
    <association property="seller" columnPrefix="e_" javaType="Employee">
      <id column="id" property="id" />
      <result column="name" property="name" />
    </association>
  </resultMap>
  <insert id="insert" keyProperty="id" useGeneratedKeys="true">
    insert into customer (`name`, age, gender, tel, qq, job_id, source_id, seller_id, inputUser_id, input_time, status)
    values (#{name}, #{age}, #{gender}, #{tel}, #{qq}, #{job.id}, #{source.id}, #{seller.id}, #{inputUser.id}, now(), #{status})
  </insert>
  <update id="updateByPrimaryKey">
    update customer
    set `name` = #{name},
      age = #{age},
      gender = #{gender},
      tel = #{tel},
      qq = #{qq},
      job_id = #{job.id},
      source_id = #{source.id},
      status = #{status}
    where id = #{id}
  </update>
  <update id="updateSeller">
    update customer set seller_id = #{sellerId} where id = #{customerId}
  </update>
  <update id="updateStatusByPrimaryKey">
    update customer set status = #{status} where id = #{id}
  </update>
  <select id="selectList" resultMap="BaseResultMap">
    select c.id, c.`name`, c.age, c.gender, c.tel, c.qq, c.input_time, c.status, j.id j_id, j.title j_title, s.id s_id, s.title s_title, e.id e_id, e.name e_name
    from customer c
    left join system_dictionary_item j on c.job_id = j.id
    left join system_dictionary_item s on c.source_id = s.id
    left join employee e on c.seller_id = e.id
    <where>
      <if test="status != -1">
        and c.status = #{status}
      </if>
      <if test="sellerId > -1">
        and c.seller_id = #{sellerId}
      </if>
      <if test="keyword != null">
        and (c.`name` like concat('%', #{keyword}, '%') or c.tel like concat('%', #{keyword}, '%'))
      </if>
    </where>
  </select>
</mapper>